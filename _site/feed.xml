<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-10-22T01:05:57-04:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Am becoming a developer</title><subtitle>Prove the process as a Result.</subtitle><entry><title type="html">What is git?</title><link href="http://localhost:4000/blog/what-is-git" rel="alternate" type="text/html" title="What is git?" /><published>2021-10-16T00:00:00-04:00</published><updated>2021-10-16T00:00:00-04:00</updated><id>http://localhost:4000/blog/what-is-git</id><content type="html" xml:base="http://localhost:4000/blog/what-is-git">&lt;h1 id=&quot;what-is-git&quot;&gt;What is git?&lt;/h1&gt;
&lt;p&gt;It’s been a little over a year since I officially sutdied programming. In order to solve unknown causes of errors that occur during some assignments, someone’s Git Pages often appeared when googling. This is how I found out that I got to know the word git.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ref: &lt;a href=&quot;https://git-scm.com&quot;&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;According to the website above, Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and effiency.&lt;/p&gt;

&lt;p&gt;The definition I understood is as follows.
Usually, projects are carried out through collaboration, not one person. One project tcontains code from multiple developers, and I understood that Git is a tool to manage which developers modified which code and which source code to update to the next version.&lt;/p&gt;

&lt;p&gt;In briefly, Git is a tool for distributed version control system.&lt;/p&gt;

&lt;h2 id=&quot;vcsversion-control-system&quot;&gt;VCS(Version Control System)&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Local Version Control System&lt;/li&gt;
  &lt;li&gt;Centralized Version Control System&lt;/li&gt;
  &lt;li&gt;Distributed Version Control System&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="git" /><category term="maening" /><summary type="html">What is git? It’s been a little over a year since I officially sutdied programming. In order to solve unknown causes of errors that occur during some assignments, someone’s Git Pages often appeared when googling. This is how I found out that I got to know the word git.</summary></entry><entry><title type="html">Create GitHub Pages</title><link href="http://localhost:4000/blog/how-to-create-blog" rel="alternate" type="text/html" title="Create GitHub Pages" /><published>2021-10-13T00:00:00-04:00</published><updated>2021-10-13T00:00:00-04:00</updated><id>http://localhost:4000/blog/how-to-create-blog</id><content type="html" xml:base="http://localhost:4000/blog/how-to-create-blog">&lt;h1 id=&quot;how-to-create-github-pages&quot;&gt;How to create GitHub pages&lt;/h1&gt;
&lt;p&gt;For developer, the Github Pages seemed to have a prerequisite. Especially for people like me who have no experience in this industry, it seems more necessary.&lt;/p&gt;

&lt;p&gt;To make a GitHub blogs, this seemingly really simple work was actually not easy for me. To create this homepage, I had to find out what Git is and know the git command. And I had to know about Jekyll and Markdown, althogh not yet depp. Moreover I had to know Ruby too.&lt;/p&gt;

&lt;p&gt;I need to organize what I studied. I’m going to start with this page.&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;step1-creating-a-repository-on-github&quot;&gt;Step1: Creating a repository on Github&lt;/h2&gt;
&lt;p&gt;Before you starting, absolutely you need an account of Github. If you don’t have, create an account.
Then you can see ‘+’ on the top right side of the browser and also you can find the green button which are in the red box on the picture below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/createPages/step1_0.png&quot; alt=&quot;Create a repository&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once you click the ‘+’ or New button, then you can create a new repository&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/createPages/step1_1.png&quot; alt=&quot;New repository&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Like a webpage which has own name, your repository also needs a special name to generate website.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/createPages/step1_2.png&quot; alt=&quot;Namning website&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;The syntax of respository name&lt;/strong&gt;
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; username.github.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;I already created my repository, therefore I put “test” between {username} and {github}
 (username is your actual GitHub username)
 According to &lt;a href=&quot;https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site&quot;&gt;GitHub Docs&lt;/a&gt;, you must be named user.github.io&lt;/p&gt;

    &lt;p&gt;Ref:&lt;/p&gt;
    &lt;ol&gt;
      &lt;li&gt;&lt;a href=&quot;https://guides.github.com/features/pages/&quot;&gt;GitHub Guides&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages#types-of-github-pages-sites&quot;&gt;About GitHub Pages&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Select “Public” radio button.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Check “Add a README file”&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Click Create repository.&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Conglats! Now you have a repository.&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;step2-clonning&quot;&gt;Step2: Clonning&lt;/h2&gt;

&lt;p&gt;I assume that there are many different way to create a pages. My way is below:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Firstly, you have to create a folder on your laptop or PC. Go back to your repository page on GitHub&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/createPages/step2_0.png&quot; alt=&quot;Clone&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Click the Code button&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/createPages/step2_1.png&quot; alt=&quot;Clone2&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Click the button then it will copy your repository address&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Open your shell(Terminal or iterm2)
And set the address where you create a new folder&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git clone [copied address] 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;e.g.1&lt;/p&gt;
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git clone https://github.com/JKsamuel/JKsamuel.github.io.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;e.g.2&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/createPages/step2_2.png&quot; alt=&quot;example&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Done! Easy!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now, We need to check it is done.
Go to the folder you create for git repositor, you can see the README.md and hidden folder named .git
hidden folder .git is When you init git, then created automatically.&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;step3-choosing-a-them&quot;&gt;Step3: Choosing a them.&lt;/h2&gt;
&lt;p&gt;There are some websites which provide theme.&lt;/p&gt;

&lt;p&gt;You can pick one from below.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://jamstackthemes.dev&quot;&gt;jamstackthemes.dev&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllthemes.org&quot;&gt;jekyllthemes.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllthemes.io&quot;&gt;jekyllthemes.io&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyll-themes.com&quot;&gt;jekyll-themes.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Or You can find “Settings” under your repository name,&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Click &lt;strong&gt;Settings&lt;/strong&gt;.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/createPages/step3_0.png&quot; alt=&quot;step3-0&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In the left sidebar, click &lt;strong&gt;Pages&lt;/strong&gt;.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/createPages/step3_1.png&quot; alt=&quot;step3-1&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click &lt;strong&gt;Choose a theme&lt;/strong&gt; button&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/createPages/step3_2.png&quot; alt=&quot;step3-2&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can choose a theme what you want and then &lt;strong&gt;Download&lt;/strong&gt; .zip file.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/createPages/step3_3.png&quot; alt=&quot;step3-3&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Lastly, unzip the downloaded compressed file and copy and paste all the files in that folder into the newly created folder earlier.&lt;/p&gt;

&lt;p&gt;So far, three procedures have been a preparation process for creating a web page. It is kind of preparing a canvas to draw.&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;step4-excute-terminal&quot;&gt;Step4: Excute Terminal&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Go to the position where you created, and init jekyll
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; jekyll new ./
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;install bundle
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; bundle install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;posting jekyll to local server
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; bundle exec jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;and then you can see the server address&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/createPages/step4_0.png&quot; alt=&quot;step4-0&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;Put the address on your browser as above or you can put address as “https://localhost:4000” on your browser.
   Then you can see what you changed.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is only hosting a webpage you created on a local computer. When you created and edited the page in the way you wanted, you should upload it to GitHub Pages.&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;step5-hosting-the-web-to-usernamegithubio&quot;&gt;Step5: Hosting the web to “username.github.io”&lt;/h2&gt;

&lt;p&gt;To host the webpages we created on GitHub Pages, you need to know the Git command. There seems to be nothing easy in the world.
(I will post about Git command and what Git is later)
I had to devote today to creating this page. I would like to define Git as a tool that allows developers to manage and collaborate on versions of programs produced. It’s not official. It’s my own opinion. Fortunately, I wwas able to understand Git a little while learning php language this semester.&lt;/p&gt;

&lt;p&gt;anyway, open your Ternimal or iTerm2.
you go to your respository folder.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Check what is changed.&lt;/strong&gt;
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;The git status command displays the state of the working directory and the staging area.
 You can realize what has been changed.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Adds to the staging area&lt;/strong&gt;&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git add --all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;The git add command adds a change in the working directory to the staging area. 
 This is not really affect the repository in any significant way-changes are not actually recorded until you run git commit.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;run git commit&lt;/strong&gt;&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git commit -m &quot;[Commit message]&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;The git commit command captures a snapshot of the project’s currently staged chages. Git will never change them unless you explicity ask it to.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Upload&lt;/strong&gt;
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The git push command is used to upload local repository content to remote repository.&lt;/p&gt;

&lt;p&gt;Reference: &lt;a href=&quot;https://atlassian.com/git/tutorials&quot;&gt;Atlassian.com&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="Create" /><category term="Blog" /><category term="Git" /><category term="Pages" /><category term="Terminal" /><summary type="html">How to create GitHub pages For developer, the Github Pages seemed to have a prerequisite. Especially for people like me who have no experience in this industry, it seems more necessary. To make a GitHub blogs, this seemingly really simple work was actually not easy for me. To create this homepage, I had to find out what Git is and know the git command. And I had to know about Jekyll and Markdown, althogh not yet depp. Moreover I had to know Ruby too. I need to organize what I studied. I’m going to start with this page. Step1: Creating a repository on Github Before you starting, absolutely you need an account of Github. If you don’t have, create an account. Then you can see ‘+’ on the top right side of the browser and also you can find the green button which are in the red box on the picture below. Once you click the ‘+’ or New button, then you can create a new repository Like a webpage which has own name, your repository also needs a special name to generate website. The syntax of respository name username.github.io I already created my repository, therefore I put “test” between {username} and {github} (username is your actual GitHub username) According to GitHub Docs, you must be named user.github.io Ref: GitHub Guides About GitHub Pages Select “Public” radio button. Check “Add a README file” Click Create repository. Conglats! Now you have a repository. Step2: Clonning I assume that there are many different way to create a pages. My way is below: Firstly, you have to create a folder on your laptop or PC. Go back to your repository page on GitHub Click the Code button Click the button then it will copy your repository address Open your shell(Terminal or iterm2) And set the address where you create a new folder git clone [copied address] e.g.1 git clone https://github.com/JKsamuel/JKsamuel.github.io.git e.g.2 Done! Easy! Now, We need to check it is done. Go to the folder you create for git repositor, you can see the README.md and hidden folder named .git hidden folder .git is When you init git, then created automatically. Step3: Choosing a them. There are some websites which provide theme. You can pick one from below. jamstackthemes.dev jekyllthemes.org jekyllthemes.io jekyll-themes.com Or You can find “Settings” under your repository name, Click Settings. In the left sidebar, click Pages. Click Choose a theme button You can choose a theme what you want and then Download .zip file. Lastly, unzip the downloaded compressed file and copy and paste all the files in that folder into the newly created folder earlier. So far, three procedures have been a preparation process for creating a web page. It is kind of preparing a canvas to draw. Step4: Excute Terminal Go to the position where you created, and init jekyll jekyll new ./ install bundle bundle install posting jekyll to local server bundle exec jekyll serve and then you can see the server address Put the address on your browser as above or you can put address as “https://localhost:4000” on your browser. Then you can see what you changed. This is only hosting a webpage you created on a local computer. When you created and edited the page in the way you wanted, you should upload it to GitHub Pages. Step5: Hosting the web to “username.github.io” To host the webpages we created on GitHub Pages, you need to know the Git command. There seems to be nothing easy in the world. (I will post about Git command and what Git is later) I had to devote today to creating this page. I would like to define Git as a tool that allows developers to manage and collaborate on versions of programs produced. It’s not official. It’s my own opinion. Fortunately, I wwas able to understand Git a little while learning php language this semester. anyway, open your Ternimal or iTerm2. you go to your respository folder. Check what is changed. git status The git status command displays the state of the working directory and the staging area. You can realize what has been changed. Adds to the staging area git add --all The git add command adds a change in the working directory to the staging area. This is not really affect the repository in any significant way-changes are not actually recorded until you run git commit. run git commit git commit -m &quot;[Commit message]&quot; The git commit command captures a snapshot of the project’s currently staged chages. Git will never change them unless you explicity ask it to. Upload git push The git push command is used to upload local repository content to remote repository. Reference: Atlassian.com</summary></entry><entry><title type="html">What is Jekyll? How to use it?</title><link href="http://localhost:4000/blog/what-is-jekyll-how-to-use-it" rel="alternate" type="text/html" title="What is Jekyll? How to use it?" /><published>2020-04-21T00:00:00-04:00</published><updated>2020-04-21T00:00:00-04:00</updated><id>http://localhost:4000/blog/what-is-jekyll-how-to-use-it</id><content type="html" xml:base="http://localhost:4000/blog/what-is-jekyll-how-to-use-it">&lt;p&gt;Jekyll is a simple, blog-aware, static site generator perfect for personal, project, or organization sites. Think of it like a file-based CMS, without all the complexity. Jekyll takes your content, renders Markdown and Liquid templates, and spits out a complete, static website ready to be served by Apache, Nginx or another web server. Jekyll is the engine behind GitHub Pages, which you can use to host sites right from your GitHub repositories and if you don’t know what GitHub Pages are you can visit on click &lt;a href=&quot;https://help.github.com/en/github/working-with-github-pages/about-github-pages&quot; target=&quot;blank&quot;&gt;here&lt;/a&gt; or &lt;a href=&quot;https://pages.github.com/&quot; target=&quot;blank&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&quot;source--jekyll-docs&quot;&gt;Source : &lt;a href=&quot;https://jekyllrb.com/docs/&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Jekyll Docs&lt;/code&gt;&lt;/a&gt;&lt;/h6&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;to-know-more-and-get-started-with-jekyll-you-can-click-here&quot;&gt;To know more and get started with Jekyll you can click &lt;a href=&quot;https://jekyllrb.com/&quot; targe=&quot;_blank&quot;&gt;here&lt;/a&gt;&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;installation&quot;&gt;Installation&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Jekyll is a Ruby Gem that can be installed on most systems.&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;requirements&quot;&gt;Requirements&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ruby-lang.org/en/downloads/&quot; target=&quot;_blank&quot;&gt;Ruby&lt;/a&gt; version 2.5.0 or above, including all development headers (ruby version can be checked by running ruby -v)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://rubygems.org/pages/download&quot; target=&quot;_blank&quot;&gt;Ruby Gems&lt;/a&gt; (which you can check by running gem -v)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gcc.gnu.org/install/&quot; target=&quot;_blank&quot;&gt;GCC&lt;/a&gt; and &lt;a href=&quot;https://www.gnu.org/software/make/&quot; target=&quot;_blank&quot;&gt;Make&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;after-installing-the-requirements-you-can-follow-these-guides&quot;&gt;After Installing the Requirements you can follow these guides:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;For detailed install instructions have a look at the guide for your operating system.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/docs/installation/macos/&quot; target=&quot;_blank&quot;&gt;macOS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/docs/installation/ubuntu/&quot; target=&quot;_blank&quot;&gt;Ubuntu&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/docs/installation/other-linux/&quot; target=&quot;_blank&quot;&gt;Other Linux Distros&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/docs/installation/windows/&quot; target=&quot;_blank&quot;&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;creating-a-new-jekyll-site&quot;&gt;Creating a new Jekyll site&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;We can create a new Jekyll site just by a simple command:&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h1 id=&quot;jekyll-new-my-site&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll new my-site&lt;/code&gt;&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Jekyll will create a new directory named as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;my-site&lt;/code&gt; which is customizable (i.e., you can change the name from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;my-site&lt;/code&gt; to anything you want for example &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll new brutus&lt;/code&gt;).&lt;/p&gt;

&lt;h3 id=&quot;changing-into-the-directory&quot;&gt;Changing into the Directory&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;We have to go inside the directory:&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h1 id=&quot;cd-my-site&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd my-site&lt;/code&gt;&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Again, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;my-site&lt;/code&gt; is just a random name which is customizable.&lt;/p&gt;

&lt;h3 id=&quot;building-the-site-and-making-it-available-on-a-local-server&quot;&gt;Building the site and making it available on a local server&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;h1 id=&quot;bundle-exec-jekyll-serve&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle exec jekyll serve&lt;/code&gt;&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;browsing-your-jekyll-site&quot;&gt;Browsing your Jekyll site&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;h1 id=&quot;browse-to-httplocalhost4000&quot;&gt;Browse to &lt;a href=&quot;http://localhost:4000/&quot; target=&quot;_blank&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://localhost:4000/&lt;/code&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;h6 id=&quot;on-encountering-any-problem-while-building-and-serving-your-jekyll-site-you-can-consider-visiting-to-the-troubleshooting-page&quot;&gt;On encountering any problem while building and serving your Jekyll site you can consider visiting to the &lt;a href=&quot;https://jekyllrb.com/docs/troubleshooting/#configuration-problems&quot; target=&quot;_blank&quot;&gt;troubleshooting&lt;/a&gt; page&lt;/h6&gt;</content><author><name></name></author><category term="jekyll" /><category term="informative" /><category term="technology" /><summary type="html">Jekyll is a simple, blog-aware, static site generator perfect for personal, project, or organization sites. Think of it like a file-based CMS, without all the complexity. Jekyll takes your content, renders Markdown and Liquid templates, and spits out a complete, static website ready to be served by Apache, Nginx or another web server. Jekyll is the engine behind GitHub Pages, which you can use to host sites right from your GitHub repositories and if you don’t know what GitHub Pages are you can visit on click here or here Source : Jekyll Docs To know more and get started with Jekyll you can click here Installation Jekyll is a Ruby Gem that can be installed on most systems. Requirements Ruby version 2.5.0 or above, including all development headers (ruby version can be checked by running ruby -v) Ruby Gems (which you can check by running gem -v) GCC and Make After Installing the Requirements you can follow these guides: For detailed install instructions have a look at the guide for your operating system. macOS Ubuntu Other Linux Distros Windows Creating a new Jekyll site We can create a new Jekyll site just by a simple command: jekyll new my-site Jekyll will create a new directory named as my-site which is customizable (i.e., you can change the name from my-site to anything you want for example jekyll new brutus). Changing into the Directory We have to go inside the directory: cd my-site Again, my-site is just a random name which is customizable. Building the site and making it available on a local server bundle exec jekyll serve Browsing your Jekyll site Browse to http://localhost:4000/ On encountering any problem while building and serving your Jekyll site you can consider visiting to the troubleshooting page</summary></entry></feed>